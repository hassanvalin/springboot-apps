apiVersion: v1
kind: Secret
metadata:
  name: mysecret1
type: Opaque
stringData:
        apiKey: Hello#786787#            //We don't need to encrypt the value here as per the 'stringData' secrets standards, stringData will take care of that part.
        apiUrl: http://my-url.com

---

apiVersion: v1
kind: Secret
metadata:
  name: mysecret2
type: Opaque
data:
        apiKey: SGV5I0hpIzg2Nw==            //The actual value Hey#Hi#867 has been encode with the command "echo -n Hey#Hi#867 | base64" and provided inthis file as per the standards 'data' secrets
        apiUrl: aHR0cDovL291ci11cmwuY29t    //Similarly this value also has been encrypted and updated here, if you want to decrypt and see use command "echo aHR0cDovL291ci11cmwuY29t | base64 -d" that gives you the actual value



// Kubernetes secrets can be created and mounted in different ways https://kubernetes.io/docs/concepts/configuration/secret/
// kubectl apply -f secret.yml -n ks-ns
// kubectl get secret -n ks-ns          -- These secreate names can be mounted to pods

// As per the above confluence link you can create a txt file and have the details in that and create a secreate and that can be mounted to pod. You can create secretes with from-literal and that can be mounted to pod.

// To mount to the pod we have to create volumes and refer the secrete names under mounted values under particualr path inside the containers
